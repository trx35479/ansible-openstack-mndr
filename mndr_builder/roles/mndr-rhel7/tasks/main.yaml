# Install dependencies
- name: Install devops packages
  yum:
    name: '{{ devops_packages }}'
    state: present
- name: Install F5 ansible packages
  pip:
    name: '{{ f5_packages }}'
    state: present

# Install selinux dependencies
- name: Install selinux python library (Fedora)
  yum:
    name: '{{ fedora_selinux_python_lib }}'
    state: present
  when: ansible_distribution == 'Fedora'

- name: Install selinux python library (Centos)
  yum:
    name: '{{ centos_selinux_python_lib }}'
    state: present
    update_cache: yes
  when: ansible_distribution == 'CentOS'

# Disable SELinux
- name: Set selinux to disabled
  selinux:
    state: disabled

# Set timezone
- name: Set local timezone
  timezone:
    name: '{{ mndr_tz }}'

- name: Add mndr group
  group:
    name: '{{ mndr_grp }}'
    gid: '{{ mndr_gid }}'
    state: present
- name: Create mndr user
  user:
    name: '{{ mndr_usr }}'
    uid: '{{ mndr_uid }}'
    group: '{{ mndr_grp }}'
    state: present

# Remove line in a file using regex
- name: Replace the line in a ssh config file
  lineinfile:
    path: '{{ sshd_path }}'
    regexp: '{{ sshd_pass_string }}'
    line: '{{ sshd_pass_line }}'
  notify: 'Restart Sshd'

# Create repo for mndr
- name: Create mndr repo
  yum_repository:
    name: '{{ repos_name }}'
    baseurl: '{{ repos_baseurl }}'
    description: '{{ repos_desc }}'
    enabled: yes
    gpgcheck: no
    metadata_expire: 30

# Copy binaries to tmp
- name: Copy binaries to target node
  copy:
    src: '{{ item }}'
    dest: '/tmp'
    mode: 0655
    owner: root
    group: root
  with_items: '{{ unico_binaries }}'

# Install package for kernel
- name: Install kernel-modules from upstream release
  yum:
    name: '{{ kernel_modules }}'
    state: present
#  with_items: '{{ kernel_modules }}' -- loop will be deprecated on release 2.11

# Set kernel parameters of ping
- name: Set kernel parameters/ipv4_ping
  sysctl:
    name: '{{ kernel_param }}'
    value: '{{ kernel_value }}'
    state: present
    reload: yes

# Ensure user_attrib is present
- name: Touch /etc/user_attrib
  file:
    path: '{{ user_path }}'
    state: touch

# User attribute
- name: Add user attribute
  lineinfile:
    path: '{{ user_path }}'
    state: present
    line: '{{ user_attrib }}'
    mode: 0644

# Install environment rpms
- name: Install mndr dependecies
  yum:
    name: '{{ mndr_dependecies }}'
    state: present

# Install Unico repos
- name: Install Unico repos
  yum:
    name: '{{ unico_packages }}'
    state: present
- name: Install unico-infra
  command: 'rpm -ivh {{ unico_infra }}'
  ignore_errors: yes
- name: Install unico-protocol
  command: 'rpm -ivh {{ unico_proto }}'
  ignore_errors: yes
- name: Install unico-mndr
  command: 'rpm -ivh {{ unico_mndr }}'
  ignore_errors: yes

# Modify bash rc of mndr user
- name: Modify bash file of mndr user
  lineinfile:
    path: '{{ bash_path }}'
    state: present
    line: '{{ item }}'
    mode: 0644
    owner: '{{ mndr_usr }}'
    group: '{{ mndr_grp }}'
  with_items: '{{ bash_items }}'

# Create a symbolic mndr binary link
- name: Create a mndr binary symbolic link
  file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
    owner: '{{ mndr_usr }}'
    group: '{{ mndr_grp }}'
  with_items: '{{ mndr_binary_link }}'
