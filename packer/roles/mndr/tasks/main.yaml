# Install dependencies on selinux (needed if OS is Fedora)
- name: Install selinux python library
  yum:
    name: '{{ selinux_python_lib }}'
    state: installed
    update_cache: yes
  when: ansible_distribution == 'Fedora'

- name: Install selinux python library (Centos)
  yum:
    name: '{{ centos_selinux }}'
    state: installed
    update_cache: yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

# Disable SELinux
- name: Set selinux to disabled 
  selinux:
    state: disabled

# Add mndr user/group
- name: Add mndr group
  group:
    name: '{{ mndr_grp_usr }}'
    gid: '{{ mndr_gid }}'
    state: present
- name: Create mndr user
  user:
    name: '{{ mndr_grp_usr }}'
    uid: '{{ mndr_uid }}'
    group: '{{ mndr_grp_usr }}'
    state: present

# Set hostname
- name: Generate ramdom number (1-100)
  set_fact:
    var1: "{{ 100|random(1,2) }}"
- name: Set hostname
  hostname: 
    name: 'mndr{{ var1 }}.{{ domain_name }}'

# Work on sshd config         
- name: Modify sshd config
  lineinfile: 
    path: '{{ sshd_path }}' 
    state: present 
    regexp: '{{ item.regexp }}' 
    line: '{{ item.line }}'
  with_items: '{{ sshd_config }}' 
  notify: "Restart Sshd"

# Create repo for mndr
- name: Create mndr repo
  yum_repository:
    name: '{{ repos_name }}'
    baseurl: '{{ repos_baseurl }}'
    description: '{{ repos_desc }}'
    enabled: yes
    protect: no
    gpgcheck: no
    metadata_expire: 30

# Install package for kernel      
- name: Install kernel-modules from upstream release
  yum:
    name: '{{ kernel_modules }}'
    state: installed
    update_cache: yes
#  with_items: '{{ kernel_modules }}' -- loop will be deprecated on release 2.11
  register: dep_install
  ignore_errors: true

# Set kernel parameters of ping
- name: Set kernel parameters/ipv4_ping
  sysctl:
    name: '{{ kernel_param }}'
    value: '{{ kernel_value }}'
    state: present
    reload: yes

# Ensure user_attrib is present
- name: Touch /etc/user_attrib
  file:
    path: '{{ user_path }}'
    state: touch

# User attribute
- name: Add user attribute
  lineinfile:
    path: '{{ user_path }}'
    state: present
    line: '{{ user_attrib }}'
    mode: 0644

# Install environment rpms
- name: Install environment rpms
  yum:
    name: '{{ env_rpms }}'
    state: installed
    update_cache: yes
#  with_items: '{{ env_rpms }}' -- loop will be deprecated on release 2.11

# Install Unico repos
- name: Install Unico repos
  yum: 
    name: '{{ unico_packages }}'
    state: installed
    update_cache: yes
#  with_items: '{{ unico_packages }}' -- loop will be deprecated on release 2.11

# Install mndr package using rpm
- name: Install unico-infra
  command: 'rpm -ivh {{ unico_infra }}'

- name: Install unico-mndr
  command: 'rpm -ivh {{ unico_mndr }}'

- name: Install unico-protocol
  command: 'rpm -ivh {{ unico_proto }}'

# Modify bash rc of mndr user
- name: Modify bash file of mndr user
  lineinfile:
    path: '{{ bash_path }}'
    state: present
    line: '{{ item }}'
    mode: 0644
    owner: '{{ mndr_grp_usr }}'
    group: '{{ mndr_grp_usr }}'
  with_items: '{{ bash_items }}'

# Create a symbolic mndr binary link
- name: Create a mndr binary symbolic link
  file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
  with_items: '{{ mndr_binary_link }}'

# Get the facts to be used on template
- name: Get localhost facts
  setup:
  delegate_to: localhost

# Templates - copy templates and modify the Diameter Endpoints
- name: Copy configuration file fsconfig
  template:
    src: 'fsconfig.j2'
    dest: '{{ fsconfig_path }}'
    owner: '{{ mndr_grp_usr }}'
    group: '{{ mndr_grp_usr }}'
    mode: 0644
- name: Copy defines.cfg template
  template:
    src: 'defines.cfg.j2'
    dest: '{{ defines_path }}'
    owner: '{{ mndr_grp_usr }}'
    group: '{{ mndr_grp_usr }}'
    mode: 0644
- name: Copy destore* files
  template:
    src: '{{ item }}'
    dest: '{{ template_path }}'
    owner: '{{ mndr_grp_usr }}'
    group: '{{ mndr_grp_usr }}'
    mode: 0644
  with_items: '{{ template_items }}'
